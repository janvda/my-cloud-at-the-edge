{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"My Cloud at the edge","text":""},{"location":"#what","title":"What ?","text":"<p>A description of the setup of my cloud at the edge = </p> <ul> <li>a set of raspberry pi devices and intel NUC devices </li> <li>connected to my home LAN</li> <li>running docker</li> <li>which are managed from my MacBook.</li> </ul> <p>This will be covered in several sessions and topics</p> <ul> <li>with focus on my practical experience</li> <li>that are energy and budget friendly</li> <li>(mainly) make use of open source software</li> </ul> <p>The different (planned) sessions and topics can be found in the top menu bar.</p>"},{"location":"#why","title":"Why ?","text":"<ul> <li>inspire and help others <ul> <li>to create their own private cloud at the edge or </li> <li>to implement some of the topics at home</li> </ul> </li> <li>learn about cloud concepts (docker, containers, images, ...), networking, ...</li> </ul>"},{"location":"#prerequisite-skills","title":"Prerequisite skills","text":"<p>No prerequisite skills to follow the sessions.</p> <p>Having some basic linux skills would be very helpful if you want to apply this in your edge environment.</p>"},{"location":"sessions/session_1/","title":"Session 1: Intro &amp; Networking","text":""},{"location":"sessions/session_1/#agenda","title":"Agenda","text":"<ol> <li>About me</li> <li>What and Why ?</li> <li>Site Structure</li> <li>Networking<ol> <li>OpenWrt Router</li> <li>OpenWrt Access Point<ol> <li>OpenWrt Time Scheduled Access<ol> <li>also cover Google Sites</li> </ol> </li> </ol> </li> </ol> </li> <li>Questions &amp; Answers</li> </ol>"},{"location":"sessions/session_2/","title":"Session 2: (under construction)","text":""},{"location":"sessions/session_2/#agenda-proposal","title":"Agenda (Proposal)","text":"<ol> <li>My Devices<ol> <li>Raspberry Pi</li> <li>Intel Nuc</li> </ol> </li> <li>Networking continued<ol> <li>Raspberry Pi Access Point</li> </ol> </li> <li>... (TO BE DEFINED)</li> </ol>"},{"location":"topics/google_sites/","title":"Google Sites","text":""},{"location":"topics/google_sites/#wikipedia-definition","title":"wikipedia definition","text":"<p>Google Sites is a structured wiki and web page creation tool included as part of the free, web-based Google Docs Editors suite offered by Google.  Google Sites is only available as a web application. The app allows users to create and edit files online while collaborating with other users in real-time.</p>"},{"location":"topics/google_sites/#link","title":"Link","text":"<ul> <li>https://sites.google.com/new</li> </ul>"},{"location":"topics/google_sites/#example","title":"Example","text":""},{"location":"topics/google_sites/#pros","title":"Pros","text":"<ul> <li>It is free<ul> <li>you can even create multipe google sites for free</li> </ul> </li> <li>fine grained security<ul> <li>you can specify who can have read/write/administrator access to your google site</li> </ul> </li> <li>very easy to create/edit pages</li> <li>responsive web design (looks good on any screen)</li> <li>several templates</li> <li>supports some integration with google products (like google drive, google spreadsheet, google calendar,...)</li> </ul>"},{"location":"topics/google_sites/#cons","title":"Cons","text":"<ul> <li>requires internet access</li> <li>requires a google account</li> <li>dependent on google terms and conditions (things might change in the future)</li> <li>mainly a simple static website (no dynamic content) with very limited configuration possibilities.</li> </ul>"},{"location":"topics/intel_nuc/","title":"Intel NUC","text":""},{"location":"topics/intel_nuc/#what","title":"What","text":"<p>Wikipedia definition of NUC</p> <p>Next Unit of Computing (NUC) is a line of small-form-factor barebone computer kits designed by Intel.  ... The NUC motherboard usually measures approximately 4 \u00d7 4 inches (10 \u00d7 10 cm), although some models have had different dimensions.[3] The barebone kits consist of the board, in a plastic case with a fan, an external power supply, and a VESA mounting plate.</p> <p> </p>"},{"location":"topics/intel_nuc/#buying-tips","title":"Buying Tips","text":"<ol> <li>Save money by buying your NUC (or comparable barebone PC / mini PC) on 2nd hand markets (target price around 140 \u20ac)<ul> <li>Older models are often sold as they are not powerfull enough as desktop computer, but they are still perfect for running many docker containers</li> <li>it doesn't matter if it is preinstalled with an old windows OS as you will install a new linux OS (ubuntu)</li> </ul> </li> <li>4GB RAM or more</li> <li>60GB SSD or more</li> <li>CPU speed comparable to Intel Celeron J3455 @ 1.50GHz (passmark average CPU mark around 2000)</li> <li>Energy consumption comparable to Intel Celeron J3455 @ 1.50GHz  (TDP around 10 Watt)</li> </ol>"},{"location":"topics/intel_nuc/#checking-cpu-speed-and-energy-consumption","title":"Checking CPU speed and energy consumption","text":"<ol> <li>Identify the CPU processor type</li> <li>Enter the CPU processort type followed by passmark in the google search bar (e.g. <code>Intel Celeron J3455 passmark</code>)</li> <li>Open the first page (or page with <code>cpubenchmark.net</code>)</li> <li>The Average CPU Mark gives an indication of the CPU speed</li> <li>the Typical TDP gives an indication of the energy consumption.</li> </ol> DEMO showing NUCs on 2nd hand market + determining CPU speed and energy consumption <p>Starting from my (private) slack channel <code>general</code> where the devices are posted.</p>"},{"location":"topics/intel_nuc/#nucs-in-my-home-network","title":"Nucs in my home network","text":"<p>I have 2 intel nucs with hostnames:</p> <ul> <li><code>nuc1</code>  (model <code>NUC6CAYS</code>)</li> <li><code>nuc2</code>  (model <code>NUC6CAYH</code>)</li> </ul> <p>I have also an ASUS Chromebox 2 (CN62).  Although it is not an intel nuc it is very similar and configured simularly as my 2 intel NUCs and therefore I have given it hostname <code>nuc3</code>.</p>"},{"location":"topics/intel_nuc/#hardware-specifications-model-nuc2","title":"Hardware specifications model <code>nuc2</code>","text":"<ul> <li>Model : Intel(R) Client Systems NUC6CAY</li> <li>Version : NUC6CAYH</li> <li>CPU : 4x Intel(R) Celeron(R) CPU J3455 @ 1.50GHz</li> <li>Memory : 8 GB (1600 MT/s)</li> <li>Storage : CT240BX500SSD1 - Capacity 240.0GB - 6.0Gb/s</li> <li>Audio : 7.1 digital; L+R+microphone (F); L+R+TOSLINK (R)</li> <li>Integrated Wireless : Intel\u00ae Wireless-AC 3168 + Bluetooth 4.</li> <li>Consumer Infrared Rx Sensor: Yes</li> <li>...</li> </ul> <p>Note that my <code>nuc1</code> and <code>nuc2</code> have very similar specs.</p>"},{"location":"topics/intel_nuc/#initial-setup-of-my-nuc2-as-headless-device","title":"Initial Setup of my nuc2 (as headless device)","text":"<ol> <li>download latest Ubuntu Desktop version (in my case this was <code>ubuntu-20.04.3-desktop-amd64.iso</code>)</li> <li>flash this image with <code>balenaEtcher</code> to USB memory stick</li> <li>boot nuc2 with this USB memory stick and follow the instructions to install new OS.</li> <li>rebooted</li> <li>enable ssh</li> <li>install and enable Cockpit web interface<ul> <li>by default https://nuc2:9090 won't work in chrome as the site is not considered secure.  To overcome this issue go to a blank section of the denial page and enter <code>thisisunsafe</code>.  This will add this URL to a safe list, where you should not be prompted again. (see link)</li> </ul> </li> </ol> DEMO cockpit web interface <p>open https://nuc2:9090</p>"},{"location":"topics/intel_nuc/#pros-and-cons-compared-to-raspberry-pi-3-model-b","title":"Pros and cons compared to raspberry pi 3 model B","text":""},{"location":"topics/intel_nuc/#pros","title":"Pros","text":"<ol> <li>more than 1 GB RAM (very interesting if you want to run (many) memory intensive containers)</li> <li>faster CPU</li> <li>interesting hardware (SSD disk, microphone, infrared sensor, Gigabit LAN)</li> <li>Overall quality</li> <li>benefits of the <code>linux/amd64</code> architecture compared to <code>linux/arm/v7</code> (or <code>linux/arm64</code>) (easier to find container images for <code>linux/amd64</code> architecture)</li> <li>benefits of the <code>Ubuntu</code> OS compared to <code>Raspberry Pi OS</code>.</li> </ol>"},{"location":"topics/intel_nuc/#cons","title":"Cons","text":"<ol> <li>Price</li> <li>Power consumption</li> <li>No GPIO pins</li> </ol>"},{"location":"topics/openwrt_access_point/","title":"My OpenWrt Access Point","text":"<p>Before reading this topic, first read topic: My OpenWRT router</p>"},{"location":"topics/openwrt_access_point/#router-model","title":"Router Model","text":"<p>Model : TP-Link Archer C6 dual-band Gigabit WLAN router (867Mbit / s 5GHz + 300Mbit / s 2.4GHz, 4 Gigabit LAN port, Mu-MIMO, IPTV, VPN, 4 external antennas) black</p> <p>Price: 42 \u20ac (march 2020)</p> <p>Memory: 120 MB</p> <p>Architecture: Qualcomm Atheros QCA956X ver 1 rev 0</p> <p></p>"},{"location":"topics/openwrt_access_point/#flashed-with-openwrt","title":"Flashed with OpenWrt","text":"<p>Firmware version : <code>OpenWrt 21.02.0 r16279-5cc0535800 / LuCI openwrt-21.02 branch git-21.231.26241-422c175</code></p>"},{"location":"topics/openwrt_access_point/#location-in-my-home-network","title":"Location in my home network","text":""},{"location":"topics/openwrt_access_point/#why","title":"Why ?","text":"<ol> <li>To extend WiFi to 1st and 2nd floor.<ul> <li>Note that my My OpenWRT router doesn't provide WiFi coverage up to 1st floor and 2nd floor.</li> </ul> </li> <li>Control WiFi Access (based on time schedule) of my kids</li> </ol>"},{"location":"topics/openwrt_access_point/#configuration-as-wifi-access-point","title":"Configuration as WiFi access point","text":"<p>To keep my network setup simple, I didn't want to create a separate network or subnet.  So for this I configured this router as a network bridge as specified below:</p> <ol> <li>Create a network bridge: Connect powerline adaptor to one of the 4 LAN ports.  Don't use the WAN port: </li> <li>Setup static IP address for LAN interface (you could also use DHCP) </li> <li>Setup WIFI using same SSID and password as my OpenWRT Router</li> </ol>"},{"location":"topics/openwrt_access_point/#configuration-to-control-wifi-access-of-my-kids","title":"Configuration to control WiFi access of my kids","text":"<p>This is described in topic OpenWrt Time Scheduled Access</p>"},{"location":"topics/openwrt_access_point/#conclusion","title":"Conclusion","text":"<p>This setup is used very intensive (e.g. when working at home) and is nearly always working fine.  I admit that in the last 2 years I (or my kids) have faced some temporary network issues.  Not sure if they were related to my OpenWrt routers.  All those issues got resolved from itselves or after a reboot of my router(s).</p>"},{"location":"topics/openwrt_router/","title":"My OpenWrt Router","text":""},{"location":"topics/openwrt_router/#router-model","title":"Router Model","text":"<p>Model : TP-Link Archer C7 Dual Band Gigabit WiFi-router (1300 Mbps (5 GHz) + 450 Mbps (2,4 GHz), 5 Gigabit LAN-port, 1 USB 2.0-port) Black</p> <p>Price: 56 \u20ac (nov 2021)</p> <p>Memory: 120 MB</p> <p>Architecture: Qualcomm Atheros QCA956X ver 1 rev 0</p> <p></p>"},{"location":"topics/openwrt_router/#flashed-with-openwrt","title":"Flashed with OpenWrt","text":"<p>Firmware version : <code>OpenWrt 21.02.0 r16279-5cc0535800 / LuCI openwrt-21.02 branch git-21.231.26241-422c175</code></p> <p>The OpenWrt Project is a Linux operating system targeting embedded devices (typically wireless routers).</p> <p>Tip: Assure you buy a router that is in the list of OpenWrt supported devices.</p>"},{"location":"topics/openwrt_router/#location-in-my-home-network","title":"Location in my home network","text":""},{"location":"topics/openwrt_router/#why","title":"Why ?","text":"<ol> <li>Flashing a router with OpenWrt was on my nerd bucketlist</li> <li>Learn about routers, networking and OpenWrt</li> <li>Have full control to configure your home network<ul> <li>This is especially relevant if your ISP modem doesn't allow to configure all things</li> </ul> </li> <li>Makes it easier to switch to new ISP or new ISP modem (e.g. switch from ADSL to fiber)</li> <li>Maybe to get better WiFi  (as your are using the WiFi of the OpenWrt Router iso of the ISP modem)</li> </ol>"},{"location":"topics/openwrt_router/#configuration","title":"Configuration","text":"<p>I don't remember everything I did 2 years ago, but a lot of information can be found at:</p> <ul> <li>openwrt.org</li> <li>openwrt forum</li> </ul> Think twice before activating any changes that might make your router inaccessible ! <p>It is of course possible to make changes so that you can't access your OpenWrt router anymore from any device.  In that case it is also not possible to correct the issue without doing a <code>reset</code> and  start all over.  (It happened me once)</p> <p>The configurations described below can also be performed on most routers/ISP modems !</p>"},{"location":"topics/openwrt_router/#ignored-ipv6","title":"Ignored IPv6","text":"<p>I ignored IPv6 configuration. IPv4 is sufficient for me and I also don't know much about IPv6.</p>"},{"location":"topics/openwrt_router/#gui-web-interface","title":"GUI (web interface)","text":"<p>OpenWrt comes with a very nice GUI. Almost everything can be configured by this GUI.</p> <p>DEMO OpenWrt GUI (LuCi)</p>"},{"location":"topics/openwrt_router/#command-line-ssh","title":"Command-line (ssh)","text":"<p>Besides the GUI it has also a command line interface (UCI) which can be accessed via SSH.</p> DEMO Access the router via ssh <p>2 examples of uci commands : </p> <ul> <li><code>uci help</code></li> <li><code>uci show wireless.radio1</code></li> </ul>"},{"location":"topics/openwrt_router/#configure-routing-network","title":"Configure routing / network","text":"<p>The main configuration steps (as I remember it) to setup my <code>192.168.2.0/24</code> network</p>"},{"location":"topics/openwrt_router/#configure-networkinterfaces","title":"Configure Network&gt;Interfaces","text":""},{"location":"topics/openwrt_router/#firewall-configuration","title":"Firewall configuration","text":"<p>Below settings opens firewall in both directions + enables masquerading in both directions.</p> <ul> <li>allows to ping from OpenWrt Router LAN to ISP modem LAN</li> <li>allows to access the internet from OpenWrt Router LAN</li> <li>doesn't allow to ping OpenWrt Router LAN from ISP modem LAN</li> <li>allows to access OpenWrt Router via its ISP modem LAN IP address (http://192.168.1.56)</li> </ul> <p></p>"},{"location":"topics/openwrt_router/#configure-ipv4-routes","title":"Configure IPv4-Routes","text":"<p>The routes can be configured via menu <code>Status &gt; Routes</code>.  The relevant IPv4 routes are put in a red box.</p> <p>I think that I didn't configure those routes, by default they were properly setup.</p> <p></p>"},{"location":"topics/openwrt_router/#configure-wifi","title":"Configure WiFi","text":"Show my OpenWrt WiFi Configuration <p>Show my actual WiFi configuration (menu  Network &gt; Wireless)</p>"},{"location":"topics/openwrt_router/#configure-static-leases","title":"Configure Static Leases","text":"<p>Instead of working with <code>/etc/hosts</code> files and configuring static IP addresses for each device, you can also define static leases (DHCP).  So the DHCP server of the router will automatically assign a static IP address and hostname based on the MAC address.</p> <p></p> DEMO OpenWrt Static Leases configuration <p>Demo the assignment of a static lease</p> Some devices (e.g. iphones) change MAC address each time they connect. <p>So this approach of static leases only works if the MAC address doesn't change. Iphones when connecting to wifi network are each time using a different MAC address.  This makes that DHCP can not use the MAC address to assign a specific IP address. To overcome this issue you must disable this feature for your home wifi. This can be disabled on your iphone through following steps:</p> <ol> <li>Goto Settings &gt; Wi-Fi</li> <li>click on (i) - information of <code>&lt;your home wifi network&gt;</code></li> <li>disable the check box <code>Private Wi-Fi Address</code></li> <li>... and do the same steps for <code>&lt;your home 5G wifi network&gt;</code> if it exists</li> </ol>"},{"location":"topics/openwrt_router/#configure-local-domain-lan","title":"Configure Local domain <code>.lan</code>","text":"<p>The below settings will set the local domain to <code>.lan</code>.  So the full name of the hosts defined by the static leases is <code>&lt;hostname&gt;.lan</code> (e.g. <code>nuc1.lan</code>)</p> <p></p> <p>Here below a log of <code>hostname</code> and <code>ping nuc1</code> command entered in a terminal window on my mac-book connected to my home network.  The hostname, domain and ip address are all configured in my OpenWrt router (see above).</p> <pre><code>mac-jan:tmp jan$ hostname\nmac-jan.lan\nmac-jan:tmp jan$ ping nuc1\nPING nuc1.lan (192.168.2.11): 56 data bytes\n64 bytes from 192.168.2.11: icmp_seq=0 ttl=64 time=35.316 ms\n64 bytes from 192.168.2.11: icmp_seq=1 ttl=64 time=3.348 ms\n</code></pre>"},{"location":"topics/openwrt_router/#issues","title":"Issues","text":"<ul> <li>#1 Once or twice a day cannot resolve hostname <code>nuc2.lan</code> in docker container - it is not yet clear if this is caused by this setup or not.</li> </ul>"},{"location":"topics/openwrt_router/#conclusion","title":"Conclusion","text":"<p>The outcome of this configuration:</p> <ul> <li>I have created my own <code>192.168.2.0/24</code> home network (domain <code>.lan</code>)</li> <li>All (relevant) devices automatically get a static IPv4 address and a hostname via DHCP</li> <li>each device in my home network can reach any of the other devices in my home network by just using its hostname (or hostname<code>.lan</code>)</li> <li>All of this is configured on my OpenWRT router<ul> <li>so no specific configuration (E.g. <code>/etc/hosts</code>) is needed on any of the devices in my home network.</li> </ul> </li> </ul> <p>OpenWrt has a ton of features and additional software packages that I didn't use.</p>"},{"location":"topics/openwrt_time_scheduled_access/","title":"OpenWrt Time Scheduled Access Control","text":"<p>Before reading this topic, first read topic: My OpenWRT Access Point</p>"},{"location":"topics/openwrt_time_scheduled_access/#what","title":"What ?","text":"<ol> <li>Define a time schedule for each of my kids during which they can access the WiFi of My OpenWRT Access Point with their devices (labtop, phone, ...).<ul> <li>This schedule can also be disabled so that they can access WiFi outside the time schedule when really needed.</li> </ul> </li> <li>Enable/disable access for a specific device (e.g. a playstation)</li> </ol>"},{"location":"topics/openwrt_time_scheduled_access/#where","title":"Where ?","text":""},{"location":"topics/openwrt_time_scheduled_access/#how","title":"How ?","text":""},{"location":"topics/openwrt_time_scheduled_access/#define-3-ip-ranges","title":"Define 3 IP ranges","text":"<p>I have defined following 3 IP ranges</p> name ip/mask ip range description <code>privileged</code> not in below groups <code>192.168.2.1-192.168.2.111</code> privileged devices <code>my_daughter</code> <code>192.168.2.112/28</code> <code>192.168.2.113-192.168.2.126</code> devices of my daughter <code>my_son_and_co</code> <code>192.168.2.128/25</code> <code>192.168.2.129-192.168.2.254</code> all other devices (includes ps4 (playstation) = <code>192.168.2.131</code>)"},{"location":"topics/openwrt_time_scheduled_access/#assure-all-connected-devices-receive-an-ip-address-in-the-proper-ip-range","title":"Assure all connected devices receive an IP address in the proper IP range","text":"<p>This is configured in my openWrt Router:</p> <ul> <li>for the <code>privileged</code> and <code>my_daughter</code> devices: I achieved this through the configuration of Static Leases</li> <li>for the <code>my_son_and_co</code> devices I achieved this through Static Leases and configuring my DHCP server so that it gives IP addresses for devices without a static lease defined in that range.</li> </ul> Show OpenWrt setup of DHCP server <p>FYI the DHCP server of my OpenWrt router is setup to allocate IP addresses in the range <code>my_son_and_co</code> as follows:</p> <ol> <li>For this goto Network &gt; Interfaces &gt; Lan &gt; Edit</li> <li>Select DHCP Server</li> <li>Specify <code>Start = 129</code> and <code>Limit = 125</code></li> <li>Save the changes.</li> </ol>"},{"location":"topics/openwrt_time_scheduled_access/#create-firewall-rules-on-my-openwrt-acces-point","title":"Create firewall rules on my OpenWrt Acces Point","text":""},{"location":"topics/openwrt_time_scheduled_access/#install-additional-packages","title":"Install additional packages","text":"<p>I have installed following packages on my OpenWrt Acces Point</p> <ul> <li><code>ipset</code> : is needed to use masks in the firewall rules ( <code>/28</code>)</li> <li><code>luci-app-commands</code>: is needed for shell commands through URL (custom commands)</li> <li><code>kmod-br-netfilter</code>: is needed to assure that the bridge firewall rules work  (see following section)</li> </ul>"},{"location":"topics/openwrt_time_scheduled_access/#enable-bridge-firewall","title":"Enable bridge firewall","text":"<p>Note that my my OpenWrt Acces Point Router is used as bridge (the WAN port is not used). By default the firewall rules are not applied for LAN - LAN traffic. To assure that firewall rules are also applied for LAN to LAN traffic we must enable bridge firewall as outlined in this section.</p> <p>Follow instructions outlined at to enable firewall rules for LAN - LAN traffic accross the bridge:</p> <ul> <li>https://openwrt.org/docs/guide-user/firewall/fw3_configurations/bridge</li> </ul> <p>In other words perform following instructions:</p> <pre><code># Install packages\nopkg update\nopkg install kmod-br-netfilter\n\n# Configure kernel parameters\ncat &lt;&lt; EOF &gt;&gt; /etc/sysctl.conf\nnet.bridge.bridge-nf-call-arptables=1\nnet.bridge.bridge-nf-call-iptables=1\nnet.bridge.bridge-nf-call-ip6tables=1\nEOF\n/etc/init.d/sysctl restart\n\n# Log and status\n/etc/init.d/firewall restart\n</code></pre>"},{"location":"topics/openwrt_time_scheduled_access/#create-firewall-reject-traffic-rules-with-appropriate-schedule","title":"Create firewall reject traffic rules with appropriate schedule","text":"<p>From web interface goto Network &gt; Firewall &gt; Traffic Rules and add rules that \"reject\" access for the IP groups <code>my_daughter</code> and <code>my_son_and_co</code> during the workdays and during the weekend.</p> <p>FYI the following rules are created:</p> <ul> <li><code>iprange_sterre_reject_during_workdays</code></li> <li><code>iprange_sterre_reject_during_weekend</code></li> <li><code>iprange_mirko_and_co_reject_during_workdays</code></li> <li><code>iprange_mirko_and_co_reject_during_weekend</code></li> <li><code>playstation_reject</code></li> </ul> Show my firewall rules <p>goto Network &gt; Firewall &gt; Traffic Rules</p>"},{"location":"topics/openwrt_time_scheduled_access/#create-custom-command-to-disableenable-the-schedule-firewall-rules","title":"Create custom command to disable/enable the schedule firewall rules","text":"<p>Steps:</p> <ol> <li> <p>I have created following script that enables/disables a specific firewall rule or lists the status (<code>enabled</code>/<code>disabled</code>) of all firewall rules.</p> fw_reject_schedule.sh (click me to download script) <pre><code>#!/bin/sh\n# author Jan Van den Audenaerde\n# date 2021-10-12\n#\n# usage: \n#       fw_reject_schedule [sterre|mirko|jan|playstation] [enable|disable]\n#       fw_reject_schedule status\nrule_sterre_workdays=\"iprange_sterre_reject_during_workdays\"\nrule_sterre_weekend=\"iprange_sterre_reject_during_weekend\"\nrule_mirko_workdays=\"iprange_mirko_and_co_reject_during_workdays\"\nrule_mirko_weekend=\"iprange_mirko_and_co_reject_during_weekend\"\nrule_jan=\"iphone_jan_reject_test_schedule\"\nrule_playstation=\"playstation_reject\"\nrule_not_applicable=\"not applicable\"\nenable=\"not defined\"\nif [ $# -eq 1 ]; then\nif [ $1 != \"status\" ]; then\necho \"ERROR: if only 1 parameter specified then it must be \\\"status\\\"!\" &gt;&amp;2\nexit 1\nfi\nelif [ $# -ne 2 ]; then\necho \"ERROR: you must specify 1 or 2 parameters !\" &gt;&amp;2\nexit 1\nelse\n# check first parameter\nif [ \"$1\" = \"sterre\" ]; then\nrule1=$rule_sterre_workdays\nrule2=$rule_sterre_weekend\nelif [ \"$1\" = \"mirko\" ]; then\nrule1=$rule_mirko_workdays\nrule2=$rule_mirko_weekend elif [ \"$1\" = \"jan\" ]; then\nrule1=$rule_jan\nrule2=$rule_not_applicable\nelif [ \"$1\" = \"playstation\" ]; then\nrule1=$rule_playstation\nrule2=$rule_not_applicable\nelse\necho \"ERROR: parameter 1 must be status, mirko, sterre, jan or playstation\" &gt;&amp;2\nexit 1\nfi\n# check 2nd parameter\nif [ \"$2\" = \"enable\" ]; then\nenable=1\nelif [ \"$2\" = \"disable\" ]; then\nenable=0\nelse\necho \"ERROR: 2nd parameter must be enable or disable \" &gt;&amp;2\nexit 1\nfi\nfi\n# function saves the firewall rule index in $rule_idx\n# for the rule with name specified as first parameter\nrule_idx=\"becomes set by below function\"\nset_rule_idx_for_rule_with_name()\n{\nif [ \"$#\" -ne 1 ]; then\necho \"ERROR: set_rule_idx_for_rule_with_name() requires exactly one parameter !\" &gt;&amp;2\nexit 1\nfi\nindex=0\nrule_idx=\"undefined\"\nwhile true; do\nname=$(uci get firewall.@rule[$index].name 2&gt;/dev/null) || break\necho \"$name\"| (grep -q \"$1\") &amp;&amp; {\nrule_idx=$index\nbreak\n}\nindex=$((index+1))\ndone\nif [ \"$rule_idx\" = \"undefined\" ]; then                         echo \"ERROR: set_rule_idx_for_rule_with_name() couldn't find firewall rule with name:$1\" &gt;&amp;2\nfi\n}\n# function sets the enabled flag to 2nd parameter\n# for the firewall rule with index specified by 1st parameter\nset_fw_rule_enabled()\n{\nif [ \"$#\" -ne 2 ]; then\necho \"ERROR: set_fw_rule_enabled() requires exactly two parameters !\" &gt;&amp;2\nexit 1\nfi\nif [ \"$2\" != \"0\" ] &amp;&amp; [ \"$2\" != \"1\" ]; then\necho \"ERROR: set_fw_rule_enabled() 2nd parameter must be 0 or 1 for function set_fw_rule_enabled()!\" &gt;&amp;2\nexit 1\nfi\nset_rule_idx_for_rule_with_name $1\nif [ \"$rule_idx\" != \"undefined\" ]; then\necho \"set enabled=$2 for firewall rule $rule_idx (name=$1)\"\nuci set firewall.@rule[$rule_idx].enabled=$2\nfi\n}\nget_fw_rule_status()\n{\nif [ \"$#\" -ne 1 ]; then\necho \"ERROR: get_fw_rule_status() requires exactly one parameter !\" &gt;&amp;2\nexit 1\nfi\nset_rule_idx_for_rule_with_name $1\nif [ \"$rule_idx\" != \"undefined\" ]; then\nstatus=$(uci get firewall.@rule[$rule_idx].enabled)\nif [ \"$status\" = \"0\" ]; then\nstatus_txt=\"IS DISABLED !\"\nelif [ \"$status\" = \"1\" ]; then\nstatus_txt=\"is enabled\";\nelse\nstatus_txt=\"HAS UNKNOWN STATUS (enabled=$status)\";\nfi\necho \"rule[$rule_idx]=$1 =&gt; $status_txt\"\nfi\n}\nif [ \"$1\" = \"status\" ]; then\nget_fw_rule_status $rule_sterre_workdays\nget_fw_rule_status $rule_sterre_weekend\nget_fw_rule_status $rule_mirko_workdays\nget_fw_rule_status $rule_mirko_weekend\nget_fw_rule_status $rule_jan\nget_fw_rule_status $rule_playstation\nelse\nset_fw_rule_enabled $rule1 $enable\nif [ \"$rule2\" != \"$rule_not_applicable\" ]; then\nset_fw_rule_enabled $rule2 $enable\nfi\nuci commit                                                            /etc/init.d/firewall restart\nfi\n</code></pre> </li> <li> <p>Copy fw_reject_schedule.sh to my router (folder = <code>/root</code>)</p> <ul> <li>Assure this script is executable (<code>chmod a+x fw_reject...</code>)</li> </ul> </li> <li>Create a custom command with name <code>reject schedule</code> via menu <code>System</code> &gt; <code>Custom Commands</code> &gt; tab <code>configure</code> that is calling <code>/root/fw_reject_schedule.sh</code> and allows Customs argument and Public access.</li> <li>You can now trigger the command via menu <code>System</code> &gt; <code>Custom Commands</code> &gt; tab <code>Dashboard</code>.</li> <li>On this tab you can also get the URL (click on <code>link</code> and take the url next to <code>display result</code>) to launch the script from the browser<ul> <li>the script parameters can be passed as specified in forum topic How to pass arguments in custom command link url?</li> </ul> </li> </ol> Show my custom command <p>goto <code>System</code> &gt; <code>Custom Commands</code> &gt; tab <code>Dashboard</code></p>"},{"location":"topics/openwrt_time_scheduled_access/#create-google-site-page-to-trigger-custom-command","title":"Create google site page to trigger custom command","text":"<p>Create a personal google site that you alone can access</p> <ul> <li>For more information about google sites see topic Google Site</li> </ul> <p>Create a new page on this google site with 7 buttons:</p> <ul> <li><code>show status (enable/disable) of all firewall rules</code></li> <li><code>(re)enable schedule Sterre</code></li> <li><code>(re)enable schedule others (includes Mirko)</code></li> <li><code>disable schedule Sterre</code></li> <li><code>disable schedule others (includes Mirko)</code></li> <li><code>block playstation</code></li> <li><code>unblock playstation</code></li> </ul> <p>These buttons open a custom command URL (see previous section) with appropriate 2 parameters to enable/disable the schedule for sterre or mirko or to block/unblock internet access for playstation.</p> <p></p> <p>Show my google site with custom commands</p>"},{"location":"topics/openwrt_time_scheduled_access/#conclusion","title":"Conclusion","text":"<p>\u2a01 It has worked very reliably</p> <p>\u2296 No longer used as kids are too old and are not playing that much on playstation</p> <p>\u2296 blocked internet access can be circumvented using mobile data</p>"},{"location":"topics/raspberry_pi/","title":"Raspberry Pi","text":"<p>I have 3 Raspberry Pi 3 Model B with hostnames:</p> <ul> <li><code>pi3one</code></li> <li><code>pi3two</code></li> <li><code>pi3three</code></li> </ul> <p></p>"},{"location":"topics/raspberry_pi/#hardware-specifications","title":"Hardware specifications","text":"<p>Raspberry Pi 3 Model B specifications</p> what type / specifications model Raspberry Pi 3 Model B RAM 1 GB SD card 32 - 64 GB CPU Quad Core 1.2GHz Broadcom BCM2837 64bit CPU WiFi &amp; bluetooth BCM43438 wireless LAN and Bluetooth Low Energy (BLE) on board. ethernet 100 Base Ethernet (100Mbit)"},{"location":"topics/raspberry_pi/#os-operating-system","title":"OS (Operating System)","text":"<p>I have installed (or upgraded to) 32 bit raspbian Buster (Debian Linux)</p> <p>FYI installing an OS on SD card is very simple:</p> <ol> <li>downloaded <code>2021-05-07-raspios-buster-armhf-full.img</code></li> <li>with balenaEtcher wrote it to 64GB SD card</li> <li>booted raspberry pi wth 64GB SD card</li> </ol> <p>Note that Raspbian has been renamed to Raspberry Pi OS.  The latest OS versions (including 64 bit) can be found here.</p>"},{"location":"topics/raspberry_pi/#cpu-info","title":"CPU INFO","text":"<pre><code>pi@pi3one:~ $ cat /proc/cpuinfo\nprocessor       : 0\nmodel name      : ARMv7 Processor rev 4 (v7l)\nBogoMIPS        : 51.20\nFeatures        : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 \nCPU implementer : 0x41\nCPU architecture: 7\nCPU variant     : 0x0\nCPU part        : 0xd03\nCPU revision    : 4\n\nprocessor       : 1\n...&lt;same output as processor 0&gt;\n\nprocessor       : 2\n...&lt;same output as processor 0&gt;\n\nprocessor       : 3\n...&lt;same output as processor 0&gt;\n\nHardware        : BCM2835\nRevision        : a02082\nSerial          : 00000000f....b\nModel           : Raspberry Pi 3 Model B Rev 1.2\npi@pi3one:~ $ \n</code></pre>"},{"location":"topics/raspberry_pi/#initial-setup-as-headless-device-enable-ssh","title":"Initial Setup as headless device (enable ssh)","text":"<p>After installing the OS you need to setup ssh, WiFi so you can remotely access it in your network as a headless device. To do so you must (only once) connect a keyboard, mouse and monitor to your raspberry pi. I think the first time you power on, it will ask you to configure all these things if not you  can run  raspi-config by entering following command in a terminal window: <code>sudo raspi-config</code>.</p> <p>Using raspi-config you can make following changes:</p> <ol> <li>in <code>1 System Options &gt; S1 Wireless LAN</code> : this must be configured if your device is not connecting to your network via its ethernet port but through WiFi.</li> <li>in <code>3 Interface Options &gt; P2 SSH</code> : enable SSH interface !</li> <li>in <code>5 Localisation Options</code> you can specify your keyboard layout if you are not using a standard keyboard</li> </ol> <p>passwordless ssh logon from macbook</p> <p>Just enter below command in terminal window on your macbook to allow passwordless ssh access to <code>pi3one</code></p> <pre><code>ssh-copy-id pi@pi3one\n</code></pre>"},{"location":"topics/raspberry_pi/#main-pros-and-cons","title":"Main Pros and Cons","text":""},{"location":"topics/raspberry_pi/#pros","title":"Pros","text":"<ol> <li>low energy consumption</li> <li>cheap</li> <li>many ways to extend via the 40 GPIO (General-Purpose Input/Output) pins</li> <li>replace OS by swapping SD cards with new OS</li> </ol>"},{"location":"topics/raspberry_pi/#cons","title":"Cons","text":"<ol> <li>limited memory (max 1 GB)<ul> <li>this becomes an issue if you want to run (several) memory intensive docker containers.</li> </ul> </li> <li>Outdated - you get more value for money if you go for Raspberry Pi 4.</li> <li>SD card corruption (Note that I  can't remember having those)</li> </ol>"},{"location":"topics/raspberry_pi_access_point/","title":"Raspberry Pi Access Point","text":"<p>UNDER CONSTRUCTION</p>"}]}